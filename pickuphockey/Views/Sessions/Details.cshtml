@using System.Linq
@using Microsoft.Ajax.Utilities
@model pickuphockey.Models.Session

@{
    ViewBag.Title = "Session Detail - " + Model.SessionDate.ToString("dddd, MM/dd/yyyy, HH:mm");
    var IsAdmin = User.IsInRole("Admin");
    var hasRosterSpot = Model.HasRosterSpot();
    var alreadyBuying = Model.AlreadyBuying();
    var alreadyBought = Model.AlreadyBought();
    var alreadySelling = Model.AlreadySelling();
    var alreadySold = Model.AlreadySold();
    var unmarkedReceivedCount = Model.UnmarkedReceived.Count();
    var unmarkedSentCount = Model.UnmarkedSent.Count();
}

<h2>@Html.DisplayFor(model => model.SessionDate)</h2>

<div>
    @if (!Model.Note.IsNullOrWhiteSpace())
    {
        <h4>@Html.DisplayFor(model => model.Note)</h4>
    }
    @if (TempData["Message"] != null)
    {
        <span class="text-danger">@TempData["Message"]</span>
    }
    @Html.Partial("_UnmarkedReceivedPartial", Model)
    @Html.Partial("_UnmarkedSentPartial", Model)
    @Html.Partial("_EmergencyInfoPartial", Model.User)
    @Html.Partial("_RosterFormatted", Model)
    @if (!Model.IsPast)
    {
        <div class="form-group">
            <div>
                @if (hasRosterSpot <= 0)
                {
                    if (alreadySelling)
                    {
                        <button disabled="true" class="btn">SUB - ALREADY SELLING</button>
                    }
                    else if (alreadySold)
                    {
                        <button disabled="true" class="btn">SUB - ALREADY SOLD</button>
                    }
                    else if (!alreadyBought)
                    {
                        <button disabled="true" class="btn">SUB - CANNOT SELL</button>
                    }
                    else if (alreadyBuying)
                    {
                        <button disabled="true" class="btn">SUB - CANNOT SELL, AND BUYING</button>
                    }
                    else
                    {
                        <button onclick="location.href='@Url.Action("Sell", "BuySells", new { id = Model.SessionId })';return false;" class="btn">RE-SELL MY SPOT</button>
                    }
                }
                else
                {
                    if (alreadySelling)
                    {
                        <button disabled="true" class="btn">REG - ALREADY SELLING</button>
                    }
                    else if (alreadySold)
                    {
                        <button disabled="true" class="btn">REG - ALREADY SOLD</button>
                    }
                    else
                    {
                        <button onclick="location.href='@Url.Action("Sell", "BuySells", new { id = Model.SessionId })';return false;" class="btn">SELL MY SPOT</button>
                    }
                }

                @if (hasRosterSpot <= 0)
                {
                    if (unmarkedSentCount > 0)
                    {
                        <button disabled="true" class="btn">SUB - CANNOT BUY, UNRESOLVED PAYMENTS</button>
                    }
                    else if (alreadyBuying)
                    {
                        <button disabled="true" class="btn">SUB - CANNOT BUY, ALREADY BUYING</button>
                    }
                    else if (alreadyBought)
                    {
                        <button disabled="true" class="btn">SUB - CANNOT BUY, ALREADY BOUGHT</button>
                    }
                    else if (Model.CanBuy(Model.User.Preferred, Model.User.PreferredPlus, false))
                    {
                        <button onclick="location.href='@Url.Action("Buy", "BuySells", new { id = Model.SessionId })';return false;" class="btn">BUY A SPOT</button>
                    }
                    else
                    {
                        <button disabled="true" class="btn">SUB - CANNOT BUY, YET</button>
                        <div>
                            <br />Spots will be available for purchase:<br />
                            <b>Preferred Plus (Regulars / Family) Players</b>: @Model.BuyDateTime.AddDays(-1).AddMinutes(-5).ToString("dddd, MM/dd/yyyy, HH:mm")<br />
                            <b>Preferred Players</b>: @Model.BuyDateTime.AddDays(-1).ToString("dddd, MM/dd/yyyy, HH:mm")<br />
                            <b>All Players</b>: @Model.BuyDateTime.ToString("dddd, MM/dd/yyyy, HH:mm")
                        </div>
                    }
                    if (Model.User.PreferredPlus && !Model.CanBuy(Model.User.Preferred, Model.User.PreferredPlus, IsAdmin))
                    {
                        <div><i>You</i> are a Preferred Plus player and have extra early access!</div>
                    }
                    else if (Model.User.Preferred && !Model.CanBuy(Model.User.Preferred, Model.User.PreferredPlus, IsAdmin))
                    {
                        <div><i>You</i> are a Preferred player and have early access!</div>
                    }
                }
                else
                {
                    if (unmarkedSentCount > 0)
                    {
                        <button disabled="true" class="btn">REG - CANNOT BUY, UNRESOLVED PAYMENTS</button>
                    }
                    else if (alreadyBuying)
                    {
                        <button disabled="true" class="btn">REG - CANNOT BUY, ALREADY BUYING</button>
                    }
                    else if (alreadySelling)
                    {
                        <button disabled="true" class="btn">REG - CANNOT BUY, AND SELLING</button>
                    }
                    else if (alreadySold)
                    {
                        if (!alreadyBought)
                        {
                            <button onclick="location.href='@Url.Action("Buy", "BuySells", new { id = Model.SessionId })';return false;" class="btn">RE-BUY A SPOT</button>
                        }
                        else
                        {
                            <button disabled="true" class="btn">REG - CANNOT BUY, ALREADY BOUGHT</button>
                        }
                    }
                    else
                    {
                        <button disabled="true" class="btn">REG - CANNOT BUY</button>
                    }
                }
                @if (IsAdmin)
                {
                    <hr />
                    <button onclick="location.href='@Url.Action("Sell", "BuySells", new { id = Model.SessionId })';return false;" class="btn">SELL A SPOT (Admin)</button>
                    <button onclick="location.href='@Url.Action("Buy", "BuySells", new { id = Model.SessionId })';return false;" class="btn">BUY A SPOT (Admin)</button>
                    <div>
                        <br />For non-Admins, spots will be available for purchase:<br />
                        <b>Preferred Plus (Regulars / Family) Players</b>: @Model.BuyDateTime.AddDays(-1).AddMinutes(-5).ToString("dddd, MM/dd/yyyy, HH:mm")<br />
                        <b>Preferred Players</b>: @Model.BuyDateTime.AddDays(-1).ToString("dddd, MM/dd/yyyy, HH:mm")<br />
                        <b>All Players</b>: @Model.BuyDateTime.ToString("dddd, MM/dd/yyyy, HH:mm")
                    </div>
                }
            </div>
        </div>
    }
    else
    {
        <div>This session is past and closed to buys / sells.</div>
    }
    <hr />
    @Html.Partial("_BuySellsPartial", Model.BuySells)
    <hr />
    @if (!string.IsNullOrEmpty(System.Configuration.ConfigurationManager.AppSettings["DisqusShortname"]))
    {
        @Html.Partial("_DisqusPartial", Model)
        <hr />
    }
    @Html.Partial("_RosterPartial", Model)
    @Html.Partial("_ActivityLogsPartial", Model.ActivityLogs.OrderByDescending(i => i.CreateDateTime))
    <hr />
</div>
<hr />
<p>
    @if (IsAdmin && Model.CanEdit)
    {
        @Html.ActionLink("Edit", "Edit", new { id = Model.SessionId })
        <span> | </span>
        @Html.ActionLink("Download Emails", "DownloadEmails", new { id = Model.SessionId })
        <span> | </span>
    }
    @Html.ActionLink("Back to List", "Index")
</p>
