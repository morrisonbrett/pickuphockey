@model pickuphockey.Models.Session
@{
    var isAdmin = User.IsInRole("Admin");
    var isSubAdmin = User.IsInRole("SubAdmin");
}
<script>
    function AddLight(name, pos) {
        const lightTeamList = document.getElementById("light-list");
        const listItem = document.createElement("div");
        listItem.className = "player-item";
        listItem.textContent = name + ((pos.length > 0) ? ', ' + pos : '');
        lightTeamList.appendChild(listItem);
    }

    function AddDark(name, pos) {
        const darkTeamList = document.getElementById("dark-list");
        const listItem = document.createElement("div");
        listItem.className = "player-item";
        listItem.textContent = name + ((pos.length > 0) ? ', ' + pos : '');
        darkTeamList.appendChild(listItem);
    }
</script>
@if (Model.RegularSetId != null)
{
    <div class="team-container-wrapper">
        <div class="team-container light-team">
            <h1 class="team-name">Rockets</h1>
            <img src="~/Content/Rockets_Logo.jpg" class="logo" />
            <div id="light-list" class="player-list"></div>
        </div>

        <div class="team-container dark-team">
            <h1 class="team-name">Beauties</h1>
            <img src="~/Content/Beauties_Logo.jpg" class="logo" />
            <div id="dark-list" , class="player-list"></div>
        </div>
    </div>
    <h2>Roster - @Model.RegularSet.Description</h2>
    <table class="table">
        <tr>
            <th>Light (@Model.LightCount)</th>
            <th>Dark (@Model.DarkCount)</th>
        </tr>
        <tr>
            <td valign="top">
                @foreach (var item in Model.Regulars.Where(r => r.TeamAssignment == pickuphockey.Models.TeamAssignment.Light).OrderByDescending(r => r.PositionPreference).ThenBy(u => u.User.FirstName))
                {
                    if (item.SellingOrSoldSpot)
                    {
                        <div style="text-decoration: line-through;">
                            @Html.DisplayFor(modelItem => item.User.FirstName)<span> </span>
                            @Html.DisplayFor(modelItem => item.User.LastName)@if (isAdmin || isSubAdmin)
                            {
                                var rating = string.Format("{0:0.0}", item.User.Rating);
                                <span> (</span>@Html.DisplayFor(modelItem => rating)<span>)</span>}<span>, </span>
                            @Html.DisplayFor(modelItem => item.PositionPreference)
                        </div>
                    }
                    else
                    {
                        @Html.DisplayFor(modelItem => item.User.FirstName)<span> </span>
                        @Html.DisplayFor(modelItem => item.User.LastName)if (isAdmin || isSubAdmin)
                        {
                            var rating = string.Format("{0:0.0}", item.User.Rating);
                            <span> (</span>@Html.DisplayFor(modelItem => rating)<span>)</span>}<span>, </span>
                        @Html.DisplayFor(modelItem => item.PositionPreference)
                        <script>
                            var playerName = "@Html.DisplayFor(modelItem => item.User.FirstName) @Html.DisplayFor(modelItem => item.User.LastName)";
                            var playerPosition = "@Html.DisplayFor(modelItem => item.PositionPreference)"

                            AddLight(playerName, playerPosition);
                        </script>
                        <br />
                    }
                }
                @foreach (var item in Model.LightSubs)
                {
                    if (item.ReSellingOrSold)
                    {
                        <div style="text-decoration: line-through;">
                            @Html.DisplayFor(modelItem => item.BuyerUser.FirstName)<span> </span>
                            @Html.DisplayFor(modelItem => item.BuyerUser.LastName)@if (isAdmin || isSubAdmin)
                            {
                                var rating = string.Format("{0:0.0}", item.BuyerUser.Rating);
                                <span> (</span>@Html.DisplayFor(modelItem => rating)<span>)</span>
                            }
                        </div>
                    }
                    else
                    {
                        @Html.DisplayFor(modelItem => item.BuyerUser.FirstName)<span> </span>
                        @Html.DisplayFor(modelItem => item.BuyerUser.LastName)if (isAdmin || isSubAdmin)
                        {
                            var rating = string.Format("{0:0.0}", item.BuyerUser.Rating);
                            <span> (</span>@Html.DisplayFor(modelItem => rating)<span>)</span>
                        }
                        <script>
                            var playerName = "@Html.DisplayFor(modelItem => item.BuyerUser.FirstName) @Html.DisplayFor(modelItem => item.BuyerUser.LastName)";

                            AddLight(playerName, '');
                        </script>
                        <br />
                    }
                }
            </td>
            <td valign="top">
                @foreach (var item in Model.Regulars.Where(r => r.TeamAssignment == pickuphockey.Models.TeamAssignment.Dark).OrderByDescending(r => r.PositionPreference).ThenBy(u => u.User.FirstName))
                {
                    if (item.SellingOrSoldSpot)
                    {
                        <div style="text-decoration: line-through;">
                            @Html.DisplayFor(modelItem => item.User.FirstName)<span> </span>
                            @Html.DisplayFor(modelItem => item.User.LastName)@if (isAdmin || isSubAdmin)
                            {
                                var rating = string.Format("{0:0.0}", item.User.Rating);
                                <span> (</span>@Html.DisplayFor(modelItem => rating)<span>)</span>}<span>, </span>
                            @Html.DisplayFor(modelItem => item.PositionPreference)
                        </div>
                    }
                    else
                    {
                        @Html.DisplayFor(modelItem => item.User.FirstName)<span> </span>
                        @Html.DisplayFor(modelItem => item.User.LastName)if (isAdmin || isSubAdmin)
                        {
                            var rating = string.Format("{0:0.0}", item.User.Rating);
                            <span> (</span>@Html.DisplayFor(modelItem => rating)<span>)</span>}<span>, </span>
                        @Html.DisplayFor(modelItem => item.PositionPreference)
                        <script>
                            var playerName = "@Html.DisplayFor(modelItem => item.User.FirstName) @Html.DisplayFor(modelItem => item.User.LastName)";
                            var playerPosition = "@Html.DisplayFor(modelItem => item.PositionPreference)"

                            AddDark(playerName, playerPosition);
                        </script>
                        <br />
                    }
                }
                @foreach (var item in Model.DarkSubs)
                {
                    if (item.ReSellingOrSold)
                    {
                        <div style="text-decoration: line-through;">
                            @Html.DisplayFor(modelItem => item.BuyerUser.FirstName)<span> </span>
                            @Html.DisplayFor(modelItem => item.BuyerUser.LastName)@if (isAdmin || isSubAdmin)
                            {
                                var rating = string.Format("{0:0.0}", item.BuyerUser.Rating);
                                <span> (</span>@Html.DisplayFor(modelItem => rating)<span>)</span>
                            }
                        </div>
                    }
                    else
                    {
                        @Html.DisplayFor(modelItem => item.BuyerUser.FirstName)<span> </span>
                        @Html.DisplayFor(modelItem => item.BuyerUser.LastName)if (isAdmin || isSubAdmin)
                        {
                            var rating = string.Format("{0:0.0}", item.BuyerUser.Rating);
                            <span> (</span>@Html.DisplayFor(modelItem => rating)<span>)</span>
                        }
                        <script>
                            var playerName = "@Html.DisplayFor(modelItem => item.BuyerUser.FirstName) @Html.DisplayFor(modelItem => item.BuyerUser.LastName)";

                            AddDark(playerName, '');
                        </script>
                        <br />
                    }
                }
            </td>
        </tr>
        @if (isAdmin || isSubAdmin)
        {
            <tr>
                <th>Light Rating: Total: @string.Format("{0:0.0}", Model.LightTotalRating), Average: @string.Format("{0:0.00}", @Decimal.Divide(Model.LightTotalRating, Model.LightCount > 0 ? Model.LightCount : 1))</th>
                <th>Dark Rating: Total: @string.Format("{0:0.0}", Model.DarkTotalRating), Average: @string.Format("{0:0.00}", @Decimal.Divide(Model.DarkTotalRating, Model.DarkCount > 0 ? Model.DarkCount : 1))</th>
            </tr>
        }
    </table>
}

<style>
    .team-container-wrapper {
        display: flex;
        justify-content: center;
        margin-bottom: 5px;
        flex-wrap: wrap;
    }

    .team-container {
        flex: 1 0 400px;
        padding: 20px;
        border-radius: 25px;
        margin: 10px;
    }

    .team-name {
        font-size: 48px;
        font-weight: bold;
        text-align: center;
        margin-bottom: 10px;
        font-family: "Roboto Condensed", sans-serif;
    }

    .player-list {
        display: grid;
        grid-template-columns: 1fr;
        grid-gap: 10px;
    }

    .player-item {
        padding: 10px 15px;
        border-radius: 5px;
        font-family: "Roboto Condensed", sans-serif;
        font-size: 22px;
    }

    .light-team {
        background-color: #f0f0f0;
        color: #333;
    }

    .light-team .player-item {
        background-color: #e0e0e0;
    }

    .dark-team {
        background-color: #333;
        color: #fff;
    }

    .dark-team .player-item {
        background-color: #444;
    }

    .logo {
        display: block;
        margin-left: auto;
        margin-right: auto;
        width: 180px;
        padding: 10px;
        border-radius: 25px;
    }
</style>
