@model pickuphockey.Models.Session
@{ 
    var isAdmin = User.IsInRole("Admin");
    var isSubAdmin = User.IsInRole("SubAdmin");
}
@if (Model.RegularSetId != null)
{
    <h2>Roster - @Model.RegularSet.Description</h2>
    <table class="table">
        <tr>
            <th>Light (@Model.LightCount)</th>
            <th>Dark (@Model.DarkCount)</th>
        </tr>
        <tr>
            <td valign="top">
                @foreach (var item in Model.Regulars.Where(r => r.TeamAssignment == pickuphockey.Models.TeamAssignment.Light).OrderByDescending(r => r.PositionPreference).ThenBy(u => u.User.FirstName))
                {
                    if (item.SellingOrSoldSpot)
                    {
                        <div style="text-decoration: line-through;">
                            @Html.DisplayFor(modelItem => item.User.FirstName)<span> </span>
                            @Html.DisplayFor(modelItem => item.User.LastName)<span>, </span>
                            @Html.DisplayFor(modelItem => item.PositionPreference)@if (isAdmin || isSubAdmin)
                            {<span>, </span>
                                var rating = string.Format("{0:0.0}", item.User.Rating);
                                @Html.DisplayFor(modelItem => rating)
                            }
                        </div>
                    }
                    else
                    {
                        @Html.DisplayFor(modelItem => item.User.FirstName)<span> </span>
                        @Html.DisplayFor(modelItem => item.User.LastName)<span>, </span>
                        @Html.DisplayFor(modelItem => item.PositionPreference)if (isAdmin || isSubAdmin)
                        {<span>, </span>
                            var rating = string.Format("{0:0.0}", item.User.Rating);
                            @Html.DisplayFor(modelItem => rating)
                        }
                        <br />
                    }
                }
                @foreach (var item in Model.LightSubs)
                {
                    if (item.ReSellingOrSold)
                    {
                        <div style="text-decoration: line-through;">
                            @Html.DisplayFor(modelItem => item.BuyerUser.FirstName)<span> </span>
                            @Html.DisplayFor(modelItem => item.BuyerUser.LastName)@if (isAdmin || isSubAdmin)
                            {<span>, </span>
                                var rating = string.Format("{0:0.0}", item.BuyerUser.Rating);
                                @Html.DisplayFor(modelItem => rating)
                            }
                        </div>
                    }
                    else
                    {
                        @Html.DisplayFor(modelItem => item.BuyerUser.FirstName)<span> </span>
                        @Html.DisplayFor(modelItem => item.BuyerUser.LastName)if (isAdmin || isSubAdmin)
                        {<span>, </span>
                            var rating = string.Format("{0:0.0}", item.BuyerUser.Rating);
                            @Html.DisplayFor(modelItem => rating)
                        }
                        <br />
                    }
                }
            </td>
            <td valign="top">
                @foreach (var item in Model.Regulars.Where(r => r.TeamAssignment == pickuphockey.Models.TeamAssignment.Dark).OrderByDescending(r => r.PositionPreference).ThenBy(u => u.User.FirstName))
                {
                    if (item.SellingOrSoldSpot)
                    {
                        <div style="text-decoration: line-through;">
                            @Html.DisplayFor(modelItem => item.User.FirstName)<span> </span>
                            @Html.DisplayFor(modelItem => item.User.LastName)<span>, </span>
                            @Html.DisplayFor(modelItem => item.PositionPreference)@if (isAdmin || isSubAdmin)
                            {<span>, </span>
                                var rating = string.Format("{0:0.0}", item.User.Rating);
                                @Html.DisplayFor(modelItem => rating)
                            }
                        </div>
                    }
                    else
                    {
                        @Html.DisplayFor(modelItem => item.User.FirstName)<span> </span>
                        @Html.DisplayFor(modelItem => item.User.LastName)<span>, </span>
                        @Html.DisplayFor(modelItem => item.PositionPreference)if (isAdmin || isSubAdmin)
                        {<span>, </span>
                            var rating = string.Format("{0:0.0}", item.User.Rating);
                            @Html.DisplayFor(modelItem => rating)
                        }
                        <br />
                    }
                }
                @foreach (var item in Model.DarkSubs)
                {
                    if (item.ReSellingOrSold)
                    {
                        <div style="text-decoration: line-through;">
                            @Html.DisplayFor(modelItem => item.BuyerUser.FirstName)<span> </span>
                            @Html.DisplayFor(modelItem => item.BuyerUser.LastName)@if (isAdmin || isSubAdmin)
                            {<span>, </span>
                                var rating = string.Format("{0:0.0}", item.BuyerUser.Rating);
                                @Html.DisplayFor(modelItem => rating)
                            }
                        </div>
                    }
                    else
                    {
                        @Html.DisplayFor(modelItem => item.BuyerUser.FirstName)<span> </span>
                        @Html.DisplayFor(modelItem => item.BuyerUser.LastName)if (isAdmin || isSubAdmin)
                        {<span>, </span>
                            var rating = string.Format("{0:0.0}", item.BuyerUser.Rating);
                            @Html.DisplayFor(modelItem => rating)
                        }
                        <br />
                    }
                }
            </td>
        </tr>
        @if (isAdmin || isSubAdmin)
        {
            <tr>
                <th>Light Rating: Total: @string.Format("{0:0.0}", Model.LightTotalRating), Average: @string.Format("{0:0.00}", @Decimal.Divide(Model.LightTotalRating, Model.LightCount > 0 ? Model.LightCount : 1))</th>
                <th>Dark Rating: Total: @string.Format("{0:0.0}", Model.DarkTotalRating), Average: @string.Format("{0:0.00}", @Decimal.Divide(Model.DarkTotalRating, Model.DarkCount > 0 ? Model.DarkCount : 1))</th>
            </tr>
        }
    </table>
}
